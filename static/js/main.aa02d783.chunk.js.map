{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","hasConnections","setHasConnections","followers","setFollowers","following","setFollowing","showFollowers","setShowFollowers","showFollowing","setShowFollowing","showMutuals","setShowMutuals","useForm","register","handleSubmit","resultsRef","useRef","scrollToResults","ref","window","scrollTo","current","offsetTop","mutuals","handleMutual","userHandle","find","element","push","map","user","id","onSubmit","jsonPaste","tempString","Object","values","connections","JSON","parse","keys","style","width","display","flexDirection","justifyContent","alignItems","placeholder","name","class","type","onClick","length","className","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa02d783.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './index.css';\nimport { useForm } from 'react-hook-form';\n\nconst App = () => {\n\tconst [hasConnections, setHasConnections] = useState(false);\n\tconst [followers, setFollowers] = useState();\n\tconst [following, setFollowing] = useState();\n\tconst [showFollowers, setShowFollowers] = useState(true);\n\tconst [showFollowing, setShowFollowing] = useState(false);\n\tconst [showMutuals, setShowMutuals] = useState(false);\n\n\tconst handleShowFollowers = () => {\n\t\tsetShowFollowing(false);\n\t\tsetShowMutuals(false);\n\t\tsetShowFollowers(true);\n\t}\n\n\tconst handleShowFollowing = () => {\n\t\tsetShowFollowers(false);\n\t\tsetShowMutuals(false);\n\t\tsetShowFollowing(true);\n\t}\n\n\tconst handleShowMutuals = () => {\n\t\tsetShowFollowers(false);\n\t\tsetShowFollowing(false);\n\t\tsetShowMutuals(true);\n\t}\n\n\tconst { register, handleSubmit } = useForm();\n\n\tconst scrollToRef = (ref) => {\n\t\twindow.scrollTo(0, ref.current.offsetTop);\n\t}\n\tconst resultsRef = useRef(null);\n\tconst scrollToResults = () => scrollToRef(resultsRef);\n\n\tconst onSubmit = jsonPaste => {\n\t\tlet tempString = Object.values(jsonPaste)[0]\n\t\tlet connections = JSON.parse(tempString)\n\t\tsetFollowers(Object.keys(connections.followers));\n\t\tsetFollowing(Object.keys(connections.following));\n\t\tsetHasConnections(true);\n\t\tscrollToResults();\n\t};\n\n\tlet mutuals = [];\n\tconst handleMutual = userHandle => {\n\t\tconst mutual = followers.find(element => element === userHandle);\n\t\tif (mutual) {\n\t\t\tmutuals.push(userHandle)\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (following) following.map(user => handleMutual(user));\n\n\n\treturn (\n\t\t<>\n\t\t\t<div id=\"submission\">\n\t\t\t\t<p id=\"header-text\"><b>STEP 1:</b> Unzip your data files // <b>STEP 2:</b> Open the folder with \"part_1\" at the end // <b>STEP 3:</b> Open the file \"connections.json\"</p>\n\t\t\t\t<header>HELLO WORLD!</header>\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit)} style={{ width: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tid=\"paste\"\n\t\t\t\t\t\tplaceholder=\"STEP 4: PASTE THE TEXT FROM YOUR CONNECTIONS.JSON FILE HERE\"\n\t\t\t\t\t\tname=\"jsonPaste\"\n\t\t\t\t\t\tref={register}\n\t\t\t\t\t/>\n\t\t\t\t\t<button class=\"white-button\" type=\"submit\">VIEW CONNECTIONS</button>\n\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t\t{hasConnections &&\n\t\t\t\t<>\n\t\t\t\t\t<div ref={resultsRef} />\n\t\t\t\t\t<div id=\"results\">\n\n\t\t\t\t\t\t<h1>I LOVE YOU, HAVE A NICE DAY!</h1>\n\n\t\t\t\t\t\t<button onClick={() => handleShowFollowers()}>FOLLOWERS ({followers.length})</button>\n\t\t\t\t\t\t<button onClick={() => handleShowFollowing()}>FOLLOWING ({following.length})</button>\n\t\t\t\t\t\t<button onClick={() => handleShowMutuals()}>MUTUALS ({mutuals.length})</button>\n\n\t\t\t\t\t\t{showFollowers &&\n\t\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t\t{followers.map(user => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<a href={`http://instagram.com/${user}`} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t\t\t\t<p>{user}</p>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t{following.map(user => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{showMutuals && handleMutual(user) &&\n\t\t\t\t\t\t\t\t\t\t\t<a href={`http://instagram.com/${user}`} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{user}</p>\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t{showFollowing &&\n\t\t\t\t\t\t\t\t\t\t\t<a href={`http://instagram.com/${user}`} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{user}</p>\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id=\"footer-div\">\n\t\t\t\t\t\t<a href=\"http://github.com/h-b8/\" id=\"footer-text\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t<p>MADE BY BAITES</p>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}